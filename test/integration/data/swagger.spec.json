{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "securityDefinitions": {
    "global_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:global": "modify pets in your account",
        "read:global": "read your pets"
      }
    },
    "calendar_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:calendar": "modify pets in your account",
        "read:calendar": "read your pets"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "CalendarCtrl",
      "description": "Controller description"
    },
    {
      "name": "EventCtrl"
    },
    {
      "name": "RestCtrl"
    },
    {
      "name": "TaskCtrl"
    }
  ],
  "paths": {
    "/rest/calendars/events": {
      "head": {
        "operationId": "EventCtrl.head",
        "tags": [
          "EventCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "operationId": "EventCtrl.query",
        "tags": [
          "EventCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/events/{id}": {
      "patch": {
        "operationId": "EventCtrl.patch",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "title": "Title event",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Missing required parameter"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "get": {
        "operationId": "EventCtrl.find",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "operationId": "EventCtrl.save",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Missing required parameter"
          }
        }
      },
      "delete": {
        "operationId": "EventCtrl.remove",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/events/list": {
      "post": {
        "operationId": "EventCtrl.update",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventCtrlUpdatePayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventModel"
              }
            }
          },
          "400": {
            "description": "Missing required parameter"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "EventCtrl.index",
        "tags": [
          "EventCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return all elements from a service"
      }
    },
    "/rest/calendars/events/status": {
      "get": {
        "operationId": "EventCtrl.byStatus",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/events/{resources}/test/{id}": {
      "get": {
        "operationId": "EventCtrl.getTest",
        "tags": [
          "EventCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resources",
            "type": "string",
            "required": true,
            "description": "The resource"
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Id of the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return an element by his resource"
      }
    },
    "/rest/calendars/classic/{id}": {
      "get": {
        "operationId": "CalendarCtrl.findClassic",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/token": {
      "get": {
        "operationId": "CalendarCtrl.getToken",
        "tags": [
          "CalendarCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/token/{token}": {
      "get": {
        "operationId": "CalendarCtrl.updateToken",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "required": true,
            "description": "Token required to update token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/annotation/test/{id}": {
      "get": {
        "operationId": "CalendarCtrl.findWithAnnotation",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/annotation/promised/{id}": {
      "get": {
        "operationId": "CalendarCtrl.findWithPromise",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/annotation/status/{id}": {
      "get": {
        "operationId": "CalendarCtrl.findAndChangeStatusCode",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/query": {
      "get": {
        "operationId": "CalendarCtrl.getQuery",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars": {
      "put": {
        "operationId": "CalendarCtrl.save",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarCtrlSavePayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CalendarModel"
            }
          },
          "400": {
            "description": "Missing required parameter"
          }
        }
      },
      "delete": {
        "operationId": "CalendarCtrl.remove",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarCtrlRemovePayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Missing required parameter"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "calendar_auth": [
              "write:calendar",
              "read:calendar"
            ]
          },
          {
            "global_auth": [
              "read:global"
            ]
          }
        ]
      }
    },
    "/rest/calendars/middleware": {
      "get": {
        "operationId": "CalendarCtrl.getWithMiddleware",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/calendars/mvc": {
      "get": {
        "operationId": "CalendarCtrl.testStackMiddlewares",
        "tags": [
          "CalendarCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/rest/calendars/middlewares2": {
      "get": {
        "operationId": "CalendarCtrl.testUseAfter",
        "tags": [
          "CalendarCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/rest/calendars/headers": {
      "get": {
        "operationId": "CalendarCtrl.testResponseHeader",
        "tags": [
          "CalendarCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "x-token-test-2": {
                "type": "string"
              },
              "x-token-test": {
                "type": "string"
              }
            }
          }
        },
        "produces": [
          "application/xml"
        ],
        "deprecated": true
      }
    },
    "/rest/calendars/documents": {
      "post": {
        "operationId": "CalendarCtrl.testMultipart",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "files",
            "required": false,
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName]\n                            Example: File too long file1"
          }
        }
      }
    },
    "/rest/calendars/documents/1": {
      "post": {
        "operationId": "CalendarCtrl.testMultipart2",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file1",
            "required": false,
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName]\n                            Example: File too long file1"
          }
        }
      }
    },
    "/rest/calendars/{resources}/test/{id}": {
      "get": {
        "operationId": "CalendarCtrl.getTest",
        "tags": [
          "CalendarCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resources",
            "type": "string",
            "required": true,
            "description": "The resource"
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Id of the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return an element by his resource"
      }
    },
    "/rest/calendars/list": {
      "get": {
        "operationId": "CalendarCtrl.index",
        "tags": [
          "CalendarCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Return all elements from a service"
      }
    },
    "/rest/{eventId}/tasks": {
      "get": {
        "operationId": "TaskCtrl.get",
        "tags": [
          "TaskCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/rest/{eventId}/tasks/hiddenparam": {
      "get": {
        "operationId": "TaskCtrl.getHiddenParams",
        "tags": [
          "TaskCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/rest/html": {
      "get": {
        "operationId": "RestCtrl.render",
        "tags": [
          "RestCtrl"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/test/{required}": {
      "get": {
        "operationId": "RestCtrl.test",
        "tags": [
          "RestCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "required",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/rest/test/{required}/{optional}": {
      "get": {
        "operationId": "RestCtrl.test_1",
        "tags": [
          "RestCtrl"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "required",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "optional",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "properties": {
        "name": {
          "type": "string"
        },
        "percent": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "EventModel": {
      "properties": {
        "id": {
          "example": "1FDCHZKH",
          "description": "Description of event model id",
          "title": "iD",
          "type": "string"
        },
        "startDate": {
          "example": {
            "example1": "2017-10-15T17:05:58.106Z"
          },
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "tasks": {
          "items": {
            "$ref": "#/definitions/Task"
          },
          "type": "array"
        },
        "mapAny": {
          "additionalProperties": {
            "nullable": true,
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array"
              },
              {
                "type": "object"
              }
            ]
          },
          "type": "object"
        },
        "anyValue": {
          "nullable": true,
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "tasksMap": {
          "additionalProperties": {
            "$ref": "#/definitions/Task"
          },
          "type": "object"
        }
      },
      "required": [
        "startDate",
        "endDate",
        "name"
      ],
      "title": "EventModel Title",
      "type": "object"
    },
    "EventCtrlUpdatePayload": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventModel"
          }
        }
      }
    },
    "CalendarModel": {
      "properties": {
        "id": {
          "example": {
            "example1": "Description example"
          },
          "description": "Description of calendar model id",
          "title": "iD",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CalendarCtrlSavePayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CalendarCtrlRemovePayload": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    }
  }
}